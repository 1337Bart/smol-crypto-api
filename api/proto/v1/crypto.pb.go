// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: api/proto/v1/crypto.proto

package cryptopb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCurrentPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *GetCurrentPriceRequest) Reset() {
	*x = GetCurrentPriceRequest{}
	mi := &file_api_proto_v1_crypto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentPriceRequest) ProtoMessage() {}

func (x *GetCurrentPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_crypto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentPriceRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentPriceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *GetCurrentPriceRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type GetCurrentPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	PriceUsd  float64                `protobuf:"fixed64,2,opt,name=price_usd,json=priceUsd,proto3" json:"price_usd,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetCurrentPriceResponse) Reset() {
	*x = GetCurrentPriceResponse{}
	mi := &file_api_proto_v1_crypto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentPriceResponse) ProtoMessage() {}

func (x *GetCurrentPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_crypto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentPriceResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentPriceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_crypto_proto_rawDescGZIP(), []int{1}
}

func (x *GetCurrentPriceResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetCurrentPriceResponse) GetPriceUsd() float64 {
	if x != nil {
		return x.PriceUsd
	}
	return 0
}

func (x *GetCurrentPriceResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GetBatchPricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols []string `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *GetBatchPricesRequest) Reset() {
	*x = GetBatchPricesRequest{}
	mi := &file_api_proto_v1_crypto_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchPricesRequest) ProtoMessage() {}

func (x *GetBatchPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_crypto_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchPricesRequest.ProtoReflect.Descriptor instead.
func (*GetBatchPricesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_crypto_proto_rawDescGZIP(), []int{2}
}

func (x *GetBatchPricesRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type GetBatchPricesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prices []*PriceData `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
}

func (x *GetBatchPricesResponse) Reset() {
	*x = GetBatchPricesResponse{}
	mi := &file_api_proto_v1_crypto_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchPricesResponse) ProtoMessage() {}

func (x *GetBatchPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_crypto_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchPricesResponse.ProtoReflect.Descriptor instead.
func (*GetBatchPricesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_crypto_proto_rawDescGZIP(), []int{3}
}

func (x *GetBatchPricesResponse) GetPrices() []*PriceData {
	if x != nil {
		return x.Prices
	}
	return nil
}

type PriceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	PriceUsd  float64                `protobuf:"fixed64,2,opt,name=price_usd,json=priceUsd,proto3" json:"price_usd,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *PriceData) Reset() {
	*x = PriceData{}
	mi := &file_api_proto_v1_crypto_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceData) ProtoMessage() {}

func (x *PriceData) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_crypto_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceData.ProtoReflect.Descriptor instead.
func (*PriceData) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_crypto_proto_rawDescGZIP(), []int{4}
}

func (x *PriceData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *PriceData) GetPriceUsd() float64 {
	if x != nil {
		return x.PriceUsd
	}
	return 0
}

func (x *PriceData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_api_proto_v1_crypto_proto protoreflect.FileDescriptor

var file_api_proto_v1_crypto_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x88, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x22, 0x7a, 0x0a,
	0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xfe, 0x01, 0x0a, 0x0d, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21,
	0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2f,
	0x7b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x7d, 0x12, 0x70, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x6f, 0x75, 0x72, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2d, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_v1_crypto_proto_rawDescOnce sync.Once
	file_api_proto_v1_crypto_proto_rawDescData = file_api_proto_v1_crypto_proto_rawDesc
)

func file_api_proto_v1_crypto_proto_rawDescGZIP() []byte {
	file_api_proto_v1_crypto_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_v1_crypto_proto_rawDescData)
	})
	return file_api_proto_v1_crypto_proto_rawDescData
}

var file_api_proto_v1_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_proto_v1_crypto_proto_goTypes = []any{
	(*GetCurrentPriceRequest)(nil),  // 0: crypto.v1.GetCurrentPriceRequest
	(*GetCurrentPriceResponse)(nil), // 1: crypto.v1.GetCurrentPriceResponse
	(*GetBatchPricesRequest)(nil),   // 2: crypto.v1.GetBatchPricesRequest
	(*GetBatchPricesResponse)(nil),  // 3: crypto.v1.GetBatchPricesResponse
	(*PriceData)(nil),               // 4: crypto.v1.PriceData
	(*timestamppb.Timestamp)(nil),   // 5: google.protobuf.Timestamp
}
var file_api_proto_v1_crypto_proto_depIdxs = []int32{
	5, // 0: crypto.v1.GetCurrentPriceResponse.timestamp:type_name -> google.protobuf.Timestamp
	4, // 1: crypto.v1.GetBatchPricesResponse.prices:type_name -> crypto.v1.PriceData
	5, // 2: crypto.v1.PriceData.timestamp:type_name -> google.protobuf.Timestamp
	0, // 3: crypto.v1.CryptoService.GetCurrentPrice:input_type -> crypto.v1.GetCurrentPriceRequest
	2, // 4: crypto.v1.CryptoService.GetBatchPrices:input_type -> crypto.v1.GetBatchPricesRequest
	1, // 5: crypto.v1.CryptoService.GetCurrentPrice:output_type -> crypto.v1.GetCurrentPriceResponse
	3, // 6: crypto.v1.CryptoService.GetBatchPrices:output_type -> crypto.v1.GetBatchPricesResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_proto_v1_crypto_proto_init() }
func file_api_proto_v1_crypto_proto_init() {
	if File_api_proto_v1_crypto_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_v1_crypto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_v1_crypto_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_crypto_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_crypto_proto_msgTypes,
	}.Build()
	File_api_proto_v1_crypto_proto = out.File
	file_api_proto_v1_crypto_proto_rawDesc = nil
	file_api_proto_v1_crypto_proto_goTypes = nil
	file_api_proto_v1_crypto_proto_depIdxs = nil
}
