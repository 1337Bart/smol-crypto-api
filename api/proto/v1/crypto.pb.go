// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: api/proto/v1/crypto.proto

package cryptopb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message for pagination
type PaginationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	mi := &file_api_proto_v1_crypto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_crypto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Crypto data message
type Crypto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Symbol                    string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name                      string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CurrentPrice              float64 `protobuf:"fixed64,4,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	High_24H                  float64 `protobuf:"fixed64,5,opt,name=high_24h,json=high24h,proto3" json:"high_24h,omitempty"`
	Low_24H                   float64 `protobuf:"fixed64,6,opt,name=low_24h,json=low24h,proto3" json:"low_24h,omitempty"`
	TotalVolume               float64 `protobuf:"fixed64,7,opt,name=total_volume,json=totalVolume,proto3" json:"total_volume,omitempty"`
	MarketCap                 float64 `protobuf:"fixed64,8,opt,name=market_cap,json=marketCap,proto3" json:"market_cap,omitempty"`
	MarketRank                int32   `protobuf:"varint,9,opt,name=market_rank,json=marketRank,proto3" json:"market_rank,omitempty"`
	PriceChange_24H           float64 `protobuf:"fixed64,10,opt,name=price_change_24h,json=priceChange24h,proto3" json:"price_change_24h,omitempty"`
	PriceChangePercentage_24H float64 `protobuf:"fixed64,11,opt,name=price_change_percentage_24h,json=priceChangePercentage24h,proto3" json:"price_change_percentage_24h,omitempty"`
	CirculatingSupply         float64 `protobuf:"fixed64,12,opt,name=circulating_supply,json=circulatingSupply,proto3" json:"circulating_supply,omitempty"`
	TotalSupply               float64 `protobuf:"fixed64,13,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	Timestamp                 string  `protobuf:"bytes,14,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Crypto) Reset() {
	*x = Crypto{}
	mi := &file_api_proto_v1_crypto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Crypto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crypto) ProtoMessage() {}

func (x *Crypto) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_crypto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crypto.ProtoReflect.Descriptor instead.
func (*Crypto) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_crypto_proto_rawDescGZIP(), []int{1}
}

func (x *Crypto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Crypto) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Crypto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Crypto) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *Crypto) GetHigh_24H() float64 {
	if x != nil {
		return x.High_24H
	}
	return 0
}

func (x *Crypto) GetLow_24H() float64 {
	if x != nil {
		return x.Low_24H
	}
	return 0
}

func (x *Crypto) GetTotalVolume() float64 {
	if x != nil {
		return x.TotalVolume
	}
	return 0
}

func (x *Crypto) GetMarketCap() float64 {
	if x != nil {
		return x.MarketCap
	}
	return 0
}

func (x *Crypto) GetMarketRank() int32 {
	if x != nil {
		return x.MarketRank
	}
	return 0
}

func (x *Crypto) GetPriceChange_24H() float64 {
	if x != nil {
		return x.PriceChange_24H
	}
	return 0
}

func (x *Crypto) GetPriceChangePercentage_24H() float64 {
	if x != nil {
		return x.PriceChangePercentage_24H
	}
	return 0
}

func (x *Crypto) GetCirculatingSupply() float64 {
	if x != nil {
		return x.CirculatingSupply
	}
	return 0
}

func (x *Crypto) GetTotalSupply() float64 {
	if x != nil {
		return x.TotalSupply
	}
	return 0
}

func (x *Crypto) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

// Request for listing cryptos
type ListCryptosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCryptosRequest) Reset() {
	*x = ListCryptosRequest{}
	mi := &file_api_proto_v1_crypto_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCryptosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCryptosRequest) ProtoMessage() {}

func (x *ListCryptosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_crypto_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCryptosRequest.ProtoReflect.Descriptor instead.
func (*ListCryptosRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_crypto_proto_rawDescGZIP(), []int{2}
}

func (x *ListCryptosRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Response for listing cryptos
type ListCryptosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cryptos     []*Crypto `protobuf:"bytes,1,rep,name=cryptos,proto3" json:"cryptos,omitempty"`
	TotalCount  int32     `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	CurrentPage int32     `protobuf:"varint,3,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
}

func (x *ListCryptosResponse) Reset() {
	*x = ListCryptosResponse{}
	mi := &file_api_proto_v1_crypto_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCryptosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCryptosResponse) ProtoMessage() {}

func (x *ListCryptosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_crypto_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCryptosResponse.ProtoReflect.Descriptor instead.
func (*ListCryptosResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_crypto_proto_rawDescGZIP(), []int{3}
}

func (x *ListCryptosResponse) GetCryptos() []*Crypto {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

func (x *ListCryptosResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListCryptosResponse) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

var File_api_proto_v1_crypto_proto protoreflect.FileDescriptor

var file_api_proto_v1_crypto_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x11, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0xd9, 0x03, 0x0a, 0x06, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x68, 0x69, 0x67, 0x68, 0x32, 0x34, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x6c,
	0x6f, 0x77, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x6f,
	0x77, 0x32, 0x34, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x34,
	0x68, 0x12, 0x3d, 0x0a, 0x1b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x32, 0x34, 0x68,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x32, 0x34, 0x68,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x63, 0x69,
	0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x52, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x32, 0x5f, 0x0a,
	0x0d, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x12, 0x1d, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3b,
	0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31, 0x33, 0x33,
	0x37, 0x42, 0x61, 0x72, 0x74, 0x2f, 0x73, 0x6d, 0x6f, 0x6c, 0x2d, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x3b, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_proto_v1_crypto_proto_rawDescOnce sync.Once
	file_api_proto_v1_crypto_proto_rawDescData = file_api_proto_v1_crypto_proto_rawDesc
)

func file_api_proto_v1_crypto_proto_rawDescGZIP() []byte {
	file_api_proto_v1_crypto_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_v1_crypto_proto_rawDescData)
	})
	return file_api_proto_v1_crypto_proto_rawDescData
}

var file_api_proto_v1_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_proto_v1_crypto_proto_goTypes = []any{
	(*PaginationRequest)(nil),   // 0: crypto.v1.PaginationRequest
	(*Crypto)(nil),              // 1: crypto.v1.Crypto
	(*ListCryptosRequest)(nil),  // 2: crypto.v1.ListCryptosRequest
	(*ListCryptosResponse)(nil), // 3: crypto.v1.ListCryptosResponse
}
var file_api_proto_v1_crypto_proto_depIdxs = []int32{
	0, // 0: crypto.v1.ListCryptosRequest.pagination:type_name -> crypto.v1.PaginationRequest
	1, // 1: crypto.v1.ListCryptosResponse.cryptos:type_name -> crypto.v1.Crypto
	2, // 2: crypto.v1.CryptoService.ListCryptos:input_type -> crypto.v1.ListCryptosRequest
	3, // 3: crypto.v1.CryptoService.ListCryptos:output_type -> crypto.v1.ListCryptosResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_v1_crypto_proto_init() }
func file_api_proto_v1_crypto_proto_init() {
	if File_api_proto_v1_crypto_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_v1_crypto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_v1_crypto_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_crypto_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_crypto_proto_msgTypes,
	}.Build()
	File_api_proto_v1_crypto_proto = out.File
	file_api_proto_v1_crypto_proto_rawDesc = nil
	file_api_proto_v1_crypto_proto_goTypes = nil
	file_api_proto_v1_crypto_proto_depIdxs = nil
}
